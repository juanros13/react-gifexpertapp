{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCRlBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCF,EAFnC,+DAGAG,MAAOD,GAHP,cAGbE,EAHa,gBAIKA,EAAKC,OAJV,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QAGzCN,QAAQC,IAAIU,GAZO,kBAaZA,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAErC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAKA,QCFJO,EAAU,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAwBxC,OAnBAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACnB,IASGoB,EDrB0BK,CAAazB,GAAjCY,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QASrB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDf,IAClDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,WAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OAEP,aADA,CACC,EAAD,eAESA,GADGA,EAAIC,aEtBvBgB,EAAe,WAAM,MAIM1C,mBAAS,CAAC,gBAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWnB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAaA,GACLA,Y,MCrBpC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4f91cd41.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const hanledInputChange = (e) =>{\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const hanledSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('submit hecho')\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats => [ inputValue,...cats,]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ hanledSubmit }>\r\n            {/* <h1>{ inputValue }</h1> */}\r\n            <input\r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ hanledInputChange }\r\n                \r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ category }&api_key=UCfKAozERU0YbBI8mgeBZmPGjLOEHmsi&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data }  = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n    \r\n    \r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    //console.log(id, title, url );\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    // const [counter, setCounter] = useState(0);\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //     .then(imgs => setImages(imgs));\r\n    // },[category]);\r\n\r\n    //getGifs();\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n        { loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className='card-gif'>\r\n            {\r\n                images.map((img) =>\r\n                    // <li  key = { id }>{ title }</li>\r\n                    <GifGridItem\r\n                        key = { img.id }\r\n                        { ...img }\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                // setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                // }, 3000);\r\n            });\r\n    }, [category])\r\n\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4],\r\n    //         loading: false\r\n    //     });\r\n    // }, 3000);\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One punch','Samurai X','Dragon ball']\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n    \r\n    // const hadledAdd = () =>{\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n            {/* <button onClick={ hadledAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            category = { category }\r\n                            key = { category }\r\n                        \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n           \r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}